declare {
  %input = WeightVar float<8 x 28 x 28 x 1> mutable // size: 25088 // Users: @in 62, @in 1
  %filter = WeightVar float<16 x 5 x 5 x 1> mutable // size: 1600 // Users: @out 84, @in 84, @in 67, @in 62, @in 1
  %bias = WeightVar float<16> mutable // size: 64 // Users: @out 102, @in 102, @in 88, @in 1
  %filter1 = WeightVar float<16 x 5 x 5 x 16> mutable // size: 25600 // Users: @out 122, @in 122, @in 105, @in 49, @in 9
  %bias1 = WeightVar float<16> mutable // size: 64 // Users: @out 134, @in 134, @in 123, @in 9
  %weights = WeightVar float<144 x 10> mutable // size: 5760 // Users: @out 161, @in 161, @in 144, @in 34, @in 18
  %bias2 = WeightVar float<10> mutable // size: 40 // Users: @out 184, @in 184, @in 167, @in 19
  %selected = WeightVar index64<8 x 1> mutable // size: 64 // Users: @in 30
  %return = WeightVar float<8 x 10> mutable // size: 320 // Users: @out 22
  %gsum = WeightVar float<16 x 5 x 5 x 1> mutable // size: 1600 // Users: @in 82, @out 80, @in 84, @out 82, @in 80
  %gsum1 = WeightVar float<16> mutable // size: 64 // Users: @in 100, @out 99, @in 102, @out 100, @in 99
  %gsum2 = WeightVar float<16 x 5 x 5 x 16> mutable // size: 25600 // Users: @in 120, @out 118, @in 122, @out 120, @in 118
  %gsum3 = WeightVar float<16> mutable // size: 64 // Users: @in 132, @out 130, @in 134, @out 132, @in 130
  %gsum4 = WeightVar float<144 x 10> mutable // size: 5760 // Users: @in 159, @out 157, @in 161, @out 159, @in 157
  %gsum5 = WeightVar float<10> mutable // size: 40 // Users: @in 182, @out 180, @in 184, @out 182, @in 180

  ; size = 91728 bytes
}

code {
  0 %conv_res = allocactivation  { Ty: float<8 x 28 x 28 x 16>} // size: 401408 // Users: @in 24, @in 7, @out 4, @out 25, @in 4, @out 1
  1 %conv = convolution @out %conv_res, @in %input, @in %filter, @in %bias { Kernels: [5, 5], Strides: [1, 1], Pads: [2, 2, 2, 2], Group: 1}
  2 %zero_res = allocactivation  { Ty: float<8 x 28 x 28 x 16>} // size: 401408 // Users: @in 62, @out 56, @out 63, @in 56, @in 24, @in 4, @out 3
  3 %zero = splat @out %zero_res { Value: 0.000000e+00}
  4 %relu31 = elementmax @out %conv_res, @in %conv_res, @in %zero_res
  5 %pool_res = allocactivation  { Ty: float<8 x 9 x 9 x 16>} // size: 41472 // Users: @out 54, @in 52, @in 49, @in 9, @out 7
  6 %pool_srcXY = allocactivation  { Ty: index64<8 x 9 x 9 x 16 x 2>} // size: 165888 // Users: @out 53, @in 52, @out 7
  7 %pool = maxpoolwithxy @out %pool_res, @in %conv_res, @out %pool_srcXY { Kernels: [3, 3], Strides: [3, 3], Pads: [0, 0, 0, 0]}
  8 %conv1_res = allocactivation  { Ty: float<8 x 9 x 9 x 16>} // size: 41472 // Users: @in 27, @in 15, @out 12, @out 28, @in 12, @out 9
  9 %conv1 = convolution @out %conv1_res, @in %pool_res, @in %filter1, @in %bias1 { Kernels: [5, 5], Strides: [1, 1], Pads: [2, 2, 2, 2], Group: 1}
  10 %zero1_res = allocactivation  { Ty: float<8 x 9 x 9 x 16>} // size: 41472 // Users: @in 49, @out 43, @out 50, @in 43, @in 27, @in 12, @out 11
  11 %zero1 = splat @out %zero1_res { Value: 0.000000e+00}
  12 %relu41 = elementmax @out %conv1_res, @in %conv1_res, @in %zero1_res
  13 %pool1_res = allocactivation  { Ty: float<8 x 3 x 3 x 16>} // size: 4608 // Users: @in 135, @in 16, @out 138, @in 40, @out 15
  14 %pool1_srcXY = allocactivation  { Ty: index64<8 x 3 x 3 x 16 x 2>} // size: 18432 // Users: @out 41, @in 40, @out 15
  15 %pool1 = maxpoolwithxy @out %pool1_res, @in %conv1_res, @out %pool1_srcXY { Kernels: [3, 3], Strides: [3, 3], Pads: [0, 0, 0, 0]}
  16 %pool1_res2 = tensorview @in %pool1_res { Ty: float<8 x 144>, Offsets: [0, 0, 0, 0]} // Users: @in 18
  17 %fc_dot_res = allocactivation  { Ty: float<8 x 10>} // size: 320 // Users: @in 30, @in 21, @out 19, @out 31, @in 19, @out 18
  18 %fc_dot = matmul @out %fc_dot_res, @in %pool1_res2, @in %weights
  19 %fc_add_bias = batchedadd @out %fc_dot_res, @in %fc_dot_res, @in %bias2
  20 %sm_res = allocactivation  { Ty: float<8 x 10>} // size: 320 // Users: @out 32, @in 30, @in 22, @out 21
  21 %sm = softmax @out %sm_res, @in %fc_dot_res
  22 %return1 = copy @out %return, @in %sm_res
  23 %relugrad2_res = allocactivation  { Ty: bool<8 x 28 x 28 x 16>} // size: 100352 // Users: @out 57, @in 56, @out 24
  24 %relugrad2 = elementcmplte @out %relugrad2_res, @in %conv_res, @in %zero_res
  25 %dealloc = deallocactivation @out %conv_res // size: 401408
  26 %relugrad_res = allocactivation  { Ty: bool<8 x 9 x 9 x 16>} // size: 10368 // Users: @out 44, @in 43, @out 27
  27 %relugrad = elementcmplte @out %relugrad_res, @in %conv1_res, @in %zero1_res
  28 %dealloc5 = deallocactivation @out %conv1_res // size: 41472
  29 %softmax_res_grad = allocactivation  { Ty: float<8 x 10>} // size: 320 // Users: @out 164, @in 163, @in 140, @in 36, @out 30
  30 %sm1 = softmaxgrad @in %sm_res, @in %fc_dot_res, @in %selected, @out %softmax_res_grad
  31 %dealloc11 = deallocactivation @out %fc_dot_res // size: 320
  32 %dealloc13 = deallocactivation @out %sm_res // size: 320
  33 %fcg_wT_res = allocactivation  { Ty: float<10 x 144>} // size: 5760 // Users: @out 37, @in 36, @out 34
  34 %fcg_wT = transpose @out %fcg_wT_res, @in %weights { Shuffle: [1, 0]}
  35 %fcg_dot_res = allocactivation  { Ty: float<8 x 144>} // size: 4608 // Users: @in 38, @out 42, @out 36
  36 %fcg_dot = matmul @out %fcg_dot_res, @in %softmax_res_grad, @in %fcg_wT_res
  37 %dealloc18 = deallocactivation @out %fcg_wT_res // size: 5760
  38 %fcg_dot_res2 = tensorview @in %fcg_dot_res { Ty: float<8 x 3 x 3 x 16>, Offsets: [0, 0]} // Users: @in 40
  39 %pool_outG = allocactivation  { Ty: float<8 x 9 x 9 x 16>} // size: 41472 // Users: @out 45, @in 43, @out 40
  40 %pool11 = maxpoolwithxygrad @in %pool1_res, @in %pool1_srcXY, @in %fcg_dot_res2, @out %pool_outG { Kernels: [3, 3], Strides: [3, 3], Pads: [0, 0, 0, 0]}
  41 %dealloc8 = deallocactivation @out %pool1_srcXY // size: 18432
  42 %dealloc19 = deallocactivation @out %fcg_dot_res // size: 4608
  43 %relugrad1 = elementselect @out %zero1_res, @in %relugrad_res, @in %zero1_res, @in %pool_outG
  44 %dealloc15 = deallocactivation @out %relugrad_res // size: 10368
  45 %dealloc21 = deallocactivation @out %pool_outG // size: 41472
  46 %conv_input_G = allocactivation  { Ty: float<8 x 9 x 9 x 16>} // size: 41472 // Users: @out 55, @in 52, @out 49
  47 %gij_div_batchSz2_res = allocactivation  { Ty: float<16 x 5 x 5 x 16>} // size: 25600 // Users: @in 106, @out 49, @in 110, @out 106, @in 120, @out 114, @out 121, @in 114, @out 110
  48 %gij_div_batchSz3_res = allocactivation  { Ty: float<16>} // size: 64 // Users: @in 124, @out 49, @in 126, @out 124, @in 132, @out 128, @out 133, @in 128, @out 126
  49 %conv11 = convolutiongrad @in %pool_res, @in %filter1, @in %zero1_res, @out %conv_input_G, @out %gij_div_batchSz2_res, @out %gij_div_batchSz3_res { Kernels: [5, 5], Strides: [1, 1], Pads: [2, 2, 2, 2], Group: 1}
  50 %dealloc6 = deallocactivation @out %zero1_res // size: 41472
  51 %pool_outG1 = allocactivation  { Ty: float<8 x 28 x 28 x 16>} // size: 401408 // Users: @out 58, @in 56, @out 52
  52 %pool2 = maxpoolwithxygrad @in %pool_res, @in %pool_srcXY, @in %conv_input_G, @out %pool_outG1 { Kernels: [3, 3], Strides: [3, 3], Pads: [0, 0, 0, 0]}
  53 %dealloc3 = deallocactivation @out %pool_srcXY // size: 165888
  54 %dealloc4 = deallocactivation @out %pool_res // size: 41472
  55 %dealloc23 = deallocactivation @out %conv_input_G // size: 41472
  56 %relugrad3 = elementselect @out %zero_res, @in %relugrad2_res, @in %zero_res, @in %pool_outG1
  57 %dealloc14 = deallocactivation @out %relugrad2_res // size: 100352
  58 %dealloc26 = deallocactivation @out %pool_outG1 // size: 401408
  59 %conv_input_G1 = allocactivation  { Ty: float<8 x 28 x 28 x 1>} // size: 25088 // Users: @out 64, @out 62
  60 %gij_div_batchSz_res = allocactivation  { Ty: float<16 x 5 x 5 x 1>} // size: 1600 // Users: @in 68, @out 62, @in 72, @out 68, @in 82, @out 76, @out 83, @in 76, @out 72
  61 %gij_div_batchSz1_res = allocactivation  { Ty: float<16>} // size: 64 // Users: @in 89, @out 62, @in 93, @out 89, @in 100, @out 96, @out 101, @in 96, @out 93
  62 %conv2 = convolutiongrad @in %input, @in %filter, @in %zero_res, @out %conv_input_G1, @out %gij_div_batchSz_res, @out %gij_div_batchSz1_res { Kernels: [5, 5], Strides: [1, 1], Pads: [2, 2, 2, 2], Group: 1}
  63 %dealloc1 = deallocactivation @out %zero_res // size: 401408
  64 %dealloc28 = deallocactivation @out %conv_input_G1 // size: 25088
  65 %L2DecaySplat_res = allocactivation  { Ty: float<16 x 5 x 5 x 1>} // size: 1600 // Users: @in 68, @out 67, @out 69, @in 67, @out 66
  66 %L2DecaySplat = splat @out %L2DecaySplat_res { Value: 1.000000e-03}
  67 %L2Grad6 = elementmul @out %L2DecaySplat_res, @in %filter, @in %L2DecaySplat_res
  68 %gij_with_l2 = elementadd @out %gij_div_batchSz_res, @in %gij_div_batchSz_res, @in %L2DecaySplat_res
  69 %dealloc31 = deallocactivation @out %L2DecaySplat_res // size: 1600
  70 %batchSizeSplat_res = allocactivation  { Ty: float<16 x 5 x 5 x 1>} // size: 1600 // Users: @out 73, @in 72, @out 71
  71 %batchSizeSplat = splat @out %batchSizeSplat_res { Value: 8.000000e+00}
  72 %gij_div_batchSz = elementdiv @out %gij_div_batchSz_res, @in %gij_div_batchSz_res, @in %batchSizeSplat_res
  73 %dealloc34 = deallocactivation @out %batchSizeSplat_res // size: 1600
  74 %learningRateSplat_res = allocactivation  { Ty: float<16 x 5 x 5 x 1>} // size: 1600 // Users: @out 77, @in 76, @out 75
  75 %learningRateSplat = splat @out %learningRateSplat_res { Value: -1.000000e-03}
  76 %dx6 = elementmul @out %gij_div_batchSz_res, @in %gij_div_batchSz_res, @in %learningRateSplat_res
  77 %dealloc36 = deallocactivation @out %learningRateSplat_res // size: 1600
  78 %learningRateSplat1_res = allocactivation  { Ty: float<16 x 5 x 5 x 1>} // size: 1600 // Users: @out 81, @in 80, @out 79
  79 %learningRateSplat1 = splat @out %learningRateSplat1_res { Value: 9.000000e-01}
  80 %GsumMult6 = elementmul @out %gsum, @in %gsum, @in %learningRateSplat1_res
  81 %dealloc38 = deallocactivation @out %learningRateSplat1_res // size: 1600
  82 %dx_with_momentum = elementadd @out %gsum, @in %gsum, @in %gij_div_batchSz_res
  83 %dealloc35 = deallocactivation @out %gij_div_batchSz_res // size: 1600
  84 %newW = elementadd @out %filter, @in %filter, @in %gsum
  85 %L2DecaySplat1_res = allocactivation  { Ty: float<16>} // size: 64 // Users: @in 124, @out 123, @out 125, @in 123, @in 88, @out 86
  86 %L2DecaySplat1 = splat @out %L2DecaySplat1_res { Value: 1.000000e-03}
  87 %L2Grad11_res = allocactivation  { Ty: float<16>} // size: 64 // Users: @out 90, @in 89, @out 88
  88 %L2Grad11 = elementmul @out %L2Grad11_res, @in %bias, @in %L2DecaySplat1_res
  89 %gij_with_l21 = elementadd @out %gij_div_batchSz1_res, @in %gij_div_batchSz1_res, @in %L2Grad11_res
  90 %dealloc43 = deallocactivation @out %L2Grad11_res // size: 64
  91 %batchSizeSplat1_res = allocactivation  { Ty: float<16>} // size: 64 // Users: @out 127, @in 126, @in 93, @out 92
  92 %batchSizeSplat1 = splat @out %batchSizeSplat1_res { Value: 8.000000e+00}
  93 %gij_div_batchSz1 = elementdiv @out %gij_div_batchSz1_res, @in %gij_div_batchSz1_res, @in %batchSizeSplat1_res
  94 %learningRateSplat2_res = allocactivation  { Ty: float<16>} // size: 64 // Users: @out 129, @in 128, @in 96, @out 95
  95 %learningRateSplat2 = splat @out %learningRateSplat2_res { Value: -1.000000e-03}
  96 %dx11 = elementmul @out %gij_div_batchSz1_res, @in %gij_div_batchSz1_res, @in %learningRateSplat2_res
  97 %learningRateSplat3_res = allocactivation  { Ty: float<16>} // size: 64 // Users: @out 131, @in 130, @in 99, @out 98
  98 %learningRateSplat3 = splat @out %learningRateSplat3_res { Value: 9.000000e-01}
  99 %GsumMult11 = elementmul @out %gsum1, @in %gsum1, @in %learningRateSplat3_res
  100 %dx_with_momentum1 = elementadd @out %gsum1, @in %gsum1, @in %gij_div_batchSz1_res
  101 %dealloc46 = deallocactivation @out %gij_div_batchSz1_res // size: 64
  102 %newW1 = elementadd @out %bias, @in %bias, @in %gsum1
  103 %L2DecaySplat2_res = allocactivation  { Ty: float<16 x 5 x 5 x 16>} // size: 25600 // Users: @in 106, @out 105, @out 107, @in 105, @out 104
  104 %L2DecaySplat2 = splat @out %L2DecaySplat2_res { Value: 1.000000e-03}
  105 %L2Grad21 = elementmul @out %L2DecaySplat2_res, @in %filter1, @in %L2DecaySplat2_res
  106 %gij_with_l22 = elementadd @out %gij_div_batchSz2_res, @in %gij_div_batchSz2_res, @in %L2DecaySplat2_res
  107 %dealloc53 = deallocactivation @out %L2DecaySplat2_res // size: 25600
  108 %batchSizeSplat2_res = allocactivation  { Ty: float<16 x 5 x 5 x 16>} // size: 25600 // Users: @out 111, @in 110, @out 109
  109 %batchSizeSplat2 = splat @out %batchSizeSplat2_res { Value: 8.000000e+00}
  110 %gij_div_batchSz2 = elementdiv @out %gij_div_batchSz2_res, @in %gij_div_batchSz2_res, @in %batchSizeSplat2_res
  111 %dealloc56 = deallocactivation @out %batchSizeSplat2_res // size: 25600
  112 %learningRateSplat4_res = allocactivation  { Ty: float<16 x 5 x 5 x 16>} // size: 25600 // Users: @out 115, @in 114, @out 113
  113 %learningRateSplat4 = splat @out %learningRateSplat4_res { Value: -1.000000e-03}
  114 %dx21 = elementmul @out %gij_div_batchSz2_res, @in %gij_div_batchSz2_res, @in %learningRateSplat4_res
  115 %dealloc58 = deallocactivation @out %learningRateSplat4_res // size: 25600
  116 %learningRateSplat5_res = allocactivation  { Ty: float<16 x 5 x 5 x 16>} // size: 25600 // Users: @out 119, @in 118, @out 117
  117 %learningRateSplat5 = splat @out %learningRateSplat5_res { Value: 9.000000e-01}
  118 %GsumMult21 = elementmul @out %gsum2, @in %gsum2, @in %learningRateSplat5_res
  119 %dealloc60 = deallocactivation @out %learningRateSplat5_res // size: 25600
  120 %dx_with_momentum2 = elementadd @out %gsum2, @in %gsum2, @in %gij_div_batchSz2_res
  121 %dealloc57 = deallocactivation @out %gij_div_batchSz2_res // size: 25600
  122 %newW2 = elementadd @out %filter1, @in %filter1, @in %gsum2
  123 %L2Grad31 = elementmul @out %L2DecaySplat1_res, @in %bias1, @in %L2DecaySplat1_res
  124 %gij_with_l23 = elementadd @out %gij_div_batchSz3_res, @in %gij_div_batchSz3_res, @in %L2DecaySplat1_res
  125 %dealloc42 = deallocactivation @out %L2DecaySplat1_res // size: 64
  126 %gij_div_batchSz3 = elementdiv @out %gij_div_batchSz3_res, @in %gij_div_batchSz3_res, @in %batchSizeSplat1_res
  127 %dealloc45 = deallocactivation @out %batchSizeSplat1_res // size: 64
  128 %dx31 = elementmul @out %gij_div_batchSz3_res, @in %gij_div_batchSz3_res, @in %learningRateSplat2_res
  129 %dealloc47 = deallocactivation @out %learningRateSplat2_res // size: 64
  130 %GsumMult31 = elementmul @out %gsum3, @in %gsum3, @in %learningRateSplat3_res
  131 %dealloc49 = deallocactivation @out %learningRateSplat3_res // size: 64
  132 %dx_with_momentum3 = elementadd @out %gsum3, @in %gsum3, @in %gij_div_batchSz3_res
  133 %dealloc66 = deallocactivation @out %gij_div_batchSz3_res // size: 64
  134 %newW3 = elementadd @out %bias1, @in %bias1, @in %gsum3
  135 %pool1_res3 = tensorview @in %pool1_res { Ty: float<8 x 144>, Offsets: [0, 0, 0, 0]} // Users: @in 137
  136 %fcg_xT_res = allocactivation  { Ty: float<144 x 8>} // size: 4608 // Users: @out 141, @in 140, @out 137
  137 %fcg_xT = transpose @out %fcg_xT_res, @in %pool1_res3 { Shuffle: [1, 0]}
  138 %dealloc9 = deallocactivation @out %pool1_res // size: 4608
  139 %gij_div_batchSz4_res = allocactivation  { Ty: float<144 x 10>} // size: 5760 // Users: @in 145, @out 140, @in 149, @out 145, @in 159, @out 153, @out 160, @in 153, @out 149
  140 %fcg_dot1 = matmul @out %gij_div_batchSz4_res, @in %fcg_xT_res, @in %softmax_res_grad
  141 %dealloc71 = deallocactivation @out %fcg_xT_res // size: 4608
  142 %L2DecaySplat4_res = allocactivation  { Ty: float<144 x 10>} // size: 5760 // Users: @in 145, @out 144, @out 146, @in 144, @out 143
  143 %L2DecaySplat4 = splat @out %L2DecaySplat4_res { Value: 1.000000e-03}
  144 %L2Grad41 = elementmul @out %L2DecaySplat4_res, @in %weights, @in %L2DecaySplat4_res
  145 %gij_with_l24 = elementadd @out %gij_div_batchSz4_res, @in %gij_div_batchSz4_res, @in %L2DecaySplat4_res
  146 %dealloc73 = deallocactivation @out %L2DecaySplat4_res // size: 5760
  147 %batchSizeSplat4_res = allocactivation  { Ty: float<144 x 10>} // size: 5760 // Users: @out 150, @in 149, @out 148
  148 %batchSizeSplat4 = splat @out %batchSizeSplat4_res { Value: 8.000000e+00}
  149 %gij_div_batchSz4 = elementdiv @out %gij_div_batchSz4_res, @in %gij_div_batchSz4_res, @in %batchSizeSplat4_res
  150 %dealloc76 = deallocactivation @out %batchSizeSplat4_res // size: 5760
  151 %learningRateSplat8_res = allocactivation  { Ty: float<144 x 10>} // size: 5760 // Users: @out 154, @in 153, @out 152
  152 %learningRateSplat8 = splat @out %learningRateSplat8_res { Value: -1.000000e-03}
  153 %dx41 = elementmul @out %gij_div_batchSz4_res, @in %gij_div_batchSz4_res, @in %learningRateSplat8_res
  154 %dealloc78 = deallocactivation @out %learningRateSplat8_res // size: 5760
  155 %learningRateSplat9_res = allocactivation  { Ty: float<144 x 10>} // size: 5760 // Users: @out 158, @in 157, @out 156
  156 %learningRateSplat9 = splat @out %learningRateSplat9_res { Value: 9.000000e-01}
  157 %GsumMult41 = elementmul @out %gsum4, @in %gsum4, @in %learningRateSplat9_res
  158 %dealloc80 = deallocactivation @out %learningRateSplat9_res // size: 5760
  159 %dx_with_momentum4 = elementadd @out %gsum4, @in %gsum4, @in %gij_div_batchSz4_res
  160 %dealloc77 = deallocactivation @out %gij_div_batchSz4_res // size: 5760
  161 %newW4 = elementadd @out %weights, @in %weights, @in %gsum4
  162 %gij_div_batchSz5_res = allocactivation  { Ty: float<10>} // size: 40 // Users: @in 168, @out 163, @in 172, @out 168, @in 182, @out 176, @out 183, @in 176, @out 172
  163 %fc_bias_reduce = batchedreduceadd @out %gij_div_batchSz5_res, @in %softmax_res_grad { Axis: 0}
  164 %dealloc17 = deallocactivation @out %softmax_res_grad // size: 320
  165 %L2DecaySplat5_res = allocactivation  { Ty: float<10>} // size: 40 // Users: @in 168, @out 167, @out 169, @in 167, @out 166
  166 %L2DecaySplat5 = splat @out %L2DecaySplat5_res { Value: 1.000000e-03}
  167 %L2Grad51 = elementmul @out %L2DecaySplat5_res, @in %bias2, @in %L2DecaySplat5_res
  168 %gij_with_l25 = elementadd @out %gij_div_batchSz5_res, @in %gij_div_batchSz5_res, @in %L2DecaySplat5_res
  169 %dealloc85 = deallocactivation @out %L2DecaySplat5_res // size: 40
  170 %batchSizeSplat5_res = allocactivation  { Ty: float<10>} // size: 40 // Users: @out 173, @in 172, @out 171
  171 %batchSizeSplat5 = splat @out %batchSizeSplat5_res { Value: 8.000000e+00}
  172 %gij_div_batchSz5 = elementdiv @out %gij_div_batchSz5_res, @in %gij_div_batchSz5_res, @in %batchSizeSplat5_res
  173 %dealloc88 = deallocactivation @out %batchSizeSplat5_res // size: 40
  174 %learningRateSplat10_res = allocactivation  { Ty: float<10>} // size: 40 // Users: @out 177, @in 176, @out 175
  175 %learningRateSplat10 = splat @out %learningRateSplat10_res { Value: -1.000000e-03}
  176 %dx51 = elementmul @out %gij_div_batchSz5_res, @in %gij_div_batchSz5_res, @in %learningRateSplat10_res
  177 %dealloc90 = deallocactivation @out %learningRateSplat10_res // size: 40
  178 %learningRateSplat11_res = allocactivation  { Ty: float<10>} // size: 40 // Users: @out 181, @in 180, @out 179
  179 %learningRateSplat11 = splat @out %learningRateSplat11_res { Value: 9.000000e-01}
  180 %GsumMult51 = elementmul @out %gsum5, @in %gsum5, @in %learningRateSplat11_res
  181 %dealloc92 = deallocactivation @out %learningRateSplat11_res // size: 40
  182 %dx_with_momentum5 = elementadd @out %gsum5, @in %gsum5, @in %gij_div_batchSz5_res
  183 %dealloc89 = deallocactivation @out %gij_div_batchSz5_res // size: 40
  184 %newW5 = elementadd @out %bias2, @in %bias2, @in %gsum5
}
